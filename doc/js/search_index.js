var search_data = {"index":{"searchIndex":["sort","bubble_sort()","quick_sort()","select_sort()"],"longSearchIndex":["sort","sort#bubble_sort()","sort#quick_sort()","sort#select_sort()"],"info":[["Sort","","Sort.html","",""],["bubble_sort","Sort","Sort.html#method-i-bubble_sort","(a)","<p>冒泡排序\n<p>它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。 走访数列的工作是重复地进行直到没有再需要交换，\n<p>名字由来 &mdash; 越小的元素会经由交换慢慢“浮”到数列的顶端，像 …\n"],["quick_sort","Sort","Sort.html#method-i-quick_sort","(a)","<p>快速排序\n<p>1.从列表中任意选择一个数\n<p>2.让列表中剩下的元素与第1步选择的数字作比较， 小于它的放在一边令其为a1， 大于它的放在另外一边令其为a2\n"],["select_sort","Sort","Sort.html#method-i-select_sort","(a)","<p>选择排序\n<p>每次从未排序部分的列表中<strong>选择</strong>最小的，将其放到未排序部分列表的最前面。\n"]]}}